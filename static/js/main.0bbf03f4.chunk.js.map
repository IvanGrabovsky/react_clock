{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timer","document","addEventListener","event","preventDefault","this","window","setInterval","console","log","toLocaleString","setState","prevProps","props","name","clearInterval","className","toLocaleTimeString","Component","App","clockShow","clockName","setRandomClockName","random","Math","toString","slice","clockIsVisible","clockIsHidden","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,MAAQ,EALV,uDAOE,WAAqB,IAAD,OAClBC,SAASC,iBACP,eACA,SAAAC,GAAK,OAAIA,EAAMC,oBAGjBC,KAAKL,MAAQM,OAAOC,aAAY,WAC9B,IAAMT,EAAO,IAAIC,KAEjBS,QAAQC,IAAIX,EAAKY,kBAEjB,EAAKC,SAAS,CAAEb,WACf,OAnBP,gCAsBE,SAAmBc,GACbP,KAAKQ,MAAMC,OAASF,EAAUE,MAChCN,QAAQC,IAAR,uBAA4BG,EAAUE,KAAtC,eAAiDT,KAAKQ,MAAMC,SAxBlE,kCA4BE,WACEC,cAAcV,KAAKL,SA7BvB,oBAgCE,WACE,OACE,sBAAKgB,UAAU,wBAAf,UACE,oBAAIA,UAAU,qBAAd,SAAoCX,KAAKQ,MAAMC,OAC/C,4BAAIT,KAAKR,MAAMC,KAAKmB,8BApC5B,GAA2BC,aCFdC,G,MAAb,4MACEtB,MAAyB,CACvBuB,WAAW,EACXC,UAAW,aAHf,EAWEC,mBAAqBf,aAAY,WAC/B,IAAMgB,EAASC,KAAKD,SAASE,WAAWC,MAAM,EAAG,GAEjD,EAAKf,SAAS,CAAEU,UAAU,SAAD,OAAWE,OACnC,KAfL,EAiBEI,eAAiB,WACf,EAAKhB,SAAS,CAAES,WAAW,KAlB/B,EAqBEQ,cAAgB,WACd,EAAKjB,SAAS,CAAES,WAAW,KAtB/B,uDAME,WACEnB,SAASC,iBAAiB,QAASG,KAAKsB,gBACxC1B,SAASC,iBAAiB,cAAeG,KAAKuB,iBARlD,oBAyBE,WACE,MAAiCvB,KAAKR,MAA9BuB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAEnB,OACE,gCACE,oBAAIL,UAAU,yCAAd,yBACA,8BAAOI,GAAa,cAAC,EAAD,CAAON,KAAMO,aA/BzC,GAAyBH,cCNzBW,IAASC,OACP,cAAC,EAAD,IACA7B,SAAS8B,eAAe,W","file":"static/js/main.0bbf03f4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timer = 0;\n\n  componentDidMount() {\n    document.addEventListener(\n      'contextmenu',\n      event => event.preventDefault(),\n    );\n\n    this.timer = window.setInterval(() => {\n      const date = new Date();\n\n      console.log(date.toLocaleString());\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <div className=\"box has-text-centered\">\n        <h3 className=\"subtitle is-size-5\">{this.props.name}</h3>\n        <p>{this.state.date.toLocaleTimeString()}</p>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\ntype State = {\n  clockShow: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockShow: true,\n    clockName: 'Clock 777',\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.clockIsVisible);\n    document.addEventListener('contextmenu', this.clockIsHidden);\n  }\n\n  setRandomClockName = setInterval(() => {\n    const random = Math.random().toString().slice(2, 6);\n\n    this.setState({ clockName: `Clock ${random}` });\n  }, 5000);\n\n  clockIsVisible = () => {\n    this.setState({ clockShow: true });\n  };\n\n  clockIsHidden = () => {\n    this.setState({ clockShow: false });\n  };\n\n  render() {\n    const { clockShow, clockName } = this.state;\n\n    return (\n      <div>\n        <h1 className=\"title is-size-3 has-text-centered mt-6\">React clock</h1>\n        <div>{ clockShow && <Clock name={clockName} /> }</div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}